c
params
c
params
c
params
c
params
c
params[:action]
params
MilestoneTrack.find(params[:id]).user_id
MilestoneTrack.find(params[:id])
current_user.id
params
c
n
c
n
params[:id].present?
c
n
c
params[:id]
params.id
params
c
current_user.id == milestone_owner
current_user.id
c
current_user.id
current_user
milestone_owner
c
n
c
current_user.supporters.find_by(supporter_id: 1).prescent?
current_user.supporters.find_by(supporter_id: 1).present?
current_user.supporters.find_by(supporter_id: params[:id]).present?
c
current_user.supporters.find_by(supporter_id: 2)
current_user.supporters.find_by(supporter_id: 1)
current_user.supporters.find_by(id: 1)
current_user.supporters.find_by()
current_user.supporters
current_user.milestone_tracks
current_user.milestones
current_user
current_user.supporters.find(supporter_id: params[:id])
current_user.supporters.all
current_user.supporters
current_user
c
n
c
supporter
n
c
supporter
n
c
n
params.inspect
c
current_user.supporters.all
current_user.supporters
current_user.supporters.first.delete
n
params
params.inspect
c
User.all
User.new(id: 2, email: "lol@lol.com", name: "lol")
User.new(id: 2, email: "lol@lol.com", name: lol)
User.all
User
User.new
User.all.inspect
User.all
User
User.create(id: 2, email: "supporter@example.com", name: "samwise")
User.all
User
User.create(id: 2, email: "supporter@example.com", name: "samwise")
User
Users
c
@users.inspect
@users = User.all
User.all
User
@users
c
@users.all
@users
c
@supporter
@user
User.all.inspect
c
User.all
User
@users
c
User.all
@users
c
@users
c
@supporters
c
supporter
n
c
n
params[:supporter][:supporter_email].present?
params[:supporter][:supporter_email]
params[:supporter][:supporter_id]
params
c
n
c
@user.supporters.where(supporter_id: 2)
c
@user.supporters
c
n
current_user
c
@user
c
@user.supporters.save
@user.supporters.create
@user.supporters
@user.save
c
@user.supporters.find_by user_id: 1
@user.supporters.find_by user_id: 2
@user.supporters.find_by user_id: 1
@user.supporters.find_by id: 1
@user.supporters.find_by id: 2
@user.supporters.find_by
@user.supporters.last
@user.supporters.all
@user.supporter
@user.supporters
c
@user.supporters.find(1)
@user.supporters.first
@user.supporters.find(1)
@user.supporters.find_by id: 1
@user.supporters.find_by id: 2
@user.supporters.find_by supporter_id: 1
@user.supporters.find_by supporter_id: 2
@user.supporters
c
@user.supporters.updat
@user.supporters.save
@supporter
@user.supporters.find_by supporter_id: 2
@user.supporters.find_by supporter_id: 1
@user.supporters.find_by(supporter_id: 2)
@user.supporters.where(supporter_id = 2)
@user.supporters.where(supporter_id == 2)
@user.supporters.where(supporter_id: 2)
@user.supporters
c
@user.supporters
c
@supporter.supporters
@supporter
n
@user.supporters
@user
n
@user
c
n
c
@user.supporters
c
.tables
rails db
@user.supporters.all
@supporter.supporters.all
@supporter.supporters
@supporter
@user.supporters.all
@user.supporters
@user
c
@user.milestone_tracks
c
@user.milestone_tracks
@user
c
@user.milestone_tracks
c
@user.milestone_tracks
n
c
@user.milestone_tracks
@user.milestone_tracks.first
@user.milestone_tracks.find(@params[:milestone_track][:milestone_track_id])
@user.milestone_tracks.find(@params[:milestone_track][:milestone_track_id]
@user.milestone_tracks.find(1)
n
c
n
@user.milestone_tracks.frozen?
n
@user.milestone_tracks.frozen?
n
@user.milestone_tracks.frozen?
n
@user.milestone_tracks.frozen?
@user
c
@user.milestone_tracks
@user.milestone
@user.id
@user
n
@user.id
@user
c
@user.milestone_tracks
create_track
c
n
@user.milestone_tracks
c
@user.milestone_tracks
n
@user.milestone_tracks
n
@user.milestone_tracks
c
@user.milestone_tracks.first.id = 2
@user.milestone_tracks.first
@user.milestone_tracks.first.delete
@user.milestone_tracks.first
@user.milestone_tracks
@user.milestone_tracks.first.delete
c
n
@user.milestone_tracks
@user.milestone_tracks.all
@user.milestone_tracks
@user.milestone_tracks.all.delete
@user.milestone_tracks
@user.milestone_tracks.first.delete
delete @user.milestone_tracks.first
delete @user.milestone_tracks
@user.milestone_tracks.delete()
@user.milestone_tracks
